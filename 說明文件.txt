輸入輸出說明:
此程式只能處理R,S,I type instruction.
每次輸入字串後，都會輸出對應的machine code.
如果輸入沒有辦法處理的指令，會輸出32位元的0
輸入`會停止執行

程式運作原理:
先將輸入的字串中的指令名字切開方便使用
然後把這個切開的指令名字轉變成一個整數
好使用後面的switch
再找出這個指令名字對應的指令型別
然後將整個指令中的參數，不管是register
還是offset，或是immediate都把他轉成整數
最後將這些整數用在實際轉換的函式裡面
這個函式會將指令傳到對應的指令型別的轉換函式裡
然後照著RISC-V的格式將這些整數轉成二進位並輸出

標頭檔說明:
Functionname.h 用enum來表示所有的RISC-V指令
(雖然列出第一頁的所有函式，但沒有全部使用)
Functiontype.h 用enum來表示R,S,I Type
CMcode.h 轉換Machinecode的Class標頭檔
需要將函式名稱轉換成值，才可以使用建構子直接做出Machinecode
CMcode.cpp CMcode.h的內容
Main.cpp main function以及Hash的所在位置
負責Hash字串並將函式名稱轉成值，然後利用CMcode轉換出Machinecode

變數名稱:請見註解

 